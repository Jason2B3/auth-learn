[{"C:\\Users\\jason\\Desktop\\auth-learn\\src\\index.js":"1","C:\\Users\\jason\\Desktop\\auth-learn\\src\\App.js":"2","C:\\Users\\jason\\Desktop\\auth-learn\\src\\pages\\AuthPage.js":"3","C:\\Users\\jason\\Desktop\\auth-learn\\src\\pages\\HomePage.js":"4","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Layout\\Layout.js":"5","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Profile\\UserProfile.js":"6","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\AuthForm.js":"7","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\StartingPage\\StartingPageContent.js":"8","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Layout\\MainNavigation.js":"9","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Profile\\ProfileForm.js":"10","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\store\\auth-context.js":"11","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\requests\\changePassword.js":"12","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\requests\\signup_login.js":"13"},{"size":358,"mtime":1632431043553,"results":"14","hashOfConfig":"15"},{"size":1676,"mtime":1632599279297,"results":"16","hashOfConfig":"15"},{"size":130,"mtime":1620044595000,"results":"17","hashOfConfig":"15"},{"size":171,"mtime":1620044595000,"results":"18","hashOfConfig":"15"},{"size":246,"mtime":1620044595000,"results":"19","hashOfConfig":"15"},{"size":278,"mtime":1620044595000,"results":"20","hashOfConfig":"15"},{"size":3721,"mtime":1632604427309,"results":"21","hashOfConfig":"15"},{"size":240,"mtime":1632518550735,"results":"22","hashOfConfig":"15"},{"size":1313,"mtime":1632588707856,"results":"23","hashOfConfig":"15"},{"size":942,"mtime":1632590985293,"results":"24","hashOfConfig":"15"},{"size":4519,"mtime":1632624440621,"results":"25","hashOfConfig":"15"},{"size":1020,"mtime":1632591181103,"results":"26","hashOfConfig":"15"},{"size":1893,"mtime":1632591125792,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"18yketa",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\jason\\Desktop\\auth-learn\\src\\index.js",[],["57","58"],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\App.js",["59"],"import { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useCustomContext } from \"./components/store/auth-context\";\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nfunction App() {\n  // Context file's variable that tells if we're logged in or not:\n  const { isLoggedIn } = useCustomContext();\n  //% LOGIC FOR PROTECTING CERTAIN PAGES (in notes)\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {isLoggedIn && <UserProfile />}\n          {!isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        //% If someone tries to search a protected URL without being logged in,\n        redirect to path \"/\"\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n      <h1> isLoggedIn: {String(isLoggedIn)}</h1>\n    </Layout>\n  );\n}\nexport default App;\n\n//% TEST WHILE NOT LOGGED IN: should all lead to the login/auth page\n\n// http://localhost:3000/FFFFF      <HomePage /> b/c redirect\n// http://localhost:3000/profile    <AuthPage /> b/c its protected\n//% TEST WHILE LOGGED IN:\n// http://localhost:3000        <HomePage />\n// http://localhost:3000/profile  <UserProfile /> b/c we now have access\n\n// http://localhost:3000/auth\n// <AuthPage /> for now because we lose our login status when we search for new URL's (as of commit 308)\n// this should not be the case in commit 309\n","C:\\Users\\jason\\Desktop\\auth-learn\\src\\pages\\AuthPage.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\pages\\HomePage.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\AuthForm.js",["60","61","62"],"import React, { useState, useRef } from \"react\";\r\nimport classes from \"./AuthForm.module.css\";\r\nimport signup_login from \"./requests/signup_login\";\r\nimport { useCustomContext } from \"../store/auth-context\";\r\nconst AuthForm = () => {\r\n  // auth-context.js imported values and methods:\r\n  const { login, logout, token, isLoggedIn } = useCustomContext();\r\n  const [isLoggingIn, setIsLoggingIn] = useState(true); // true=login  false=signup\r\n  // Input field values tied to refs\r\n  const passwordInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n\r\n  // Sign in or Sign Up when you press the submit handler (depends on what user opts to do)\r\n  const submitHandler = async function (event) {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    //# If an account already exists, login using the method from our AuthContext file\r\n    if (isLoggingIn) {\r\n      // Login to Firebase site + change a state value in our authContext file\r\n      const responsePayload = await signup_login(\r\n        enteredEmail,\r\n        enteredPassword,\r\n        \"login\"\r\n      );\r\n      // Update the auth-context.js state values\r\n      if (!responsePayload) return; // guards vs crashes\r\n      // Update context file\r\n      const expireTime = new Date(\r\n        // current time + response payload expiry time in seconds * 1000 to convert to ms\r\n        new Date().getTime() + Number(responsePayload.expiresIn) * 1000\r\n      );\r\n      login(responsePayload.idToken, expireTime); // changes isLoggedIn & idToken\r\n      console.log(\"logged in! Here's my payload:\", responsePayload);\r\n    }\r\n    //@ If we're signing up, create a new account\r\n    if (!isLoggingIn) {\r\n      // Sign up using our dedicated function for doing so on Firebase:\r\n      const responsePayload = await signup_login(\r\n        enteredEmail,\r\n        enteredPassword,\r\n        \"signup\"\r\n      );\r\n      if (!responsePayload) return; // guards vs crashes\r\n      // Update context file\r\n      const expireTime = new Date(\r\n        // current time + response payload expiry time in seconds * 1000 to convert to ms\r\n        new Date().getTime() + Number(responsePayload.expiresIn) * 1000 //! typo\r\n      );\r\n      login(responsePayload.idToken, expireTime); // changes isLoggedIn & idToken\r\n      console.log(\"signed up! Here's my payload:\", responsePayload);\r\n    }\r\n  }; // Runs regardless of whether isLoggingIn is T/F\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLoggingIn((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLoggingIn ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" ref={emailInputRef} required />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={passwordInputRef}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button>{isLoggingIn ? \"Login\" : \"Create Account\"}</button>\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLoggingIn ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n\r\n//~ COLOR COORDINATION\r\n//@ Sign Up with Email and Passsword\r\n//# Log in with Email and Password\r\n//% Logout\r\n//\r\n","C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Profile\\ProfileForm.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\store\\auth-context.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\requests\\changePassword.js",[],"C:\\Users\\jason\\Desktop\\auth-learn\\src\\components\\Auth\\requests\\signup_login.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":25,"column":17,"nodeType":"69","messageId":"70","endLine":28,"endColumn":9},{"ruleId":"71","severity":1,"message":"72","line":7,"column":18,"nodeType":"73","messageId":"74","endLine":7,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":7,"column":26,"nodeType":"73","messageId":"74","endLine":7,"endColumn":31},{"ruleId":"71","severity":1,"message":"76","line":7,"column":33,"nodeType":"73","messageId":"74","endLine":7,"endColumn":43},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","no-unused-vars","'logout' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]